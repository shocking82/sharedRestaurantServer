/*
 * This file is generated by jOOQ.
*/
package com.johnsong.android.spring.jooq.information_schema.tables.records;


import com.johnsong.android.spring.jooq.information_schema.tables.UserStatistics;

import javax.annotation.Generated;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserStatisticsRecord extends TableRecordImpl<UserStatisticsRecord> {

    private static final long serialVersionUID = 253021908;

    /**
     * Setter for <code>information_schema.USER_STATISTICS.USER</code>.
     */
    public UserStatisticsRecord setUser(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.USER</code>.
     */
    public String getUser() {
        return (String) get(0);
    }

    /**
     * Setter for <code>information_schema.USER_STATISTICS.TOTAL_CONNECTIONS</code>.
     */
    public UserStatisticsRecord setTotalConnections(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.TOTAL_CONNECTIONS</code>.
     */
    public Integer getTotalConnections() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>information_schema.USER_STATISTICS.CONCURRENT_CONNECTIONS</code>.
     */
    public UserStatisticsRecord setConcurrentConnections(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.CONCURRENT_CONNECTIONS</code>.
     */
    public Integer getConcurrentConnections() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>information_schema.USER_STATISTICS.CONNECTED_TIME</code>.
     */
    public UserStatisticsRecord setConnectedTime(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.CONNECTED_TIME</code>.
     */
    public Integer getConnectedTime() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>information_schema.USER_STATISTICS.BUSY_TIME</code>.
     */
    public UserStatisticsRecord setBusyTime(Double value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.BUSY_TIME</code>.
     */
    public Double getBusyTime() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>information_schema.USER_STATISTICS.CPU_TIME</code>.
     */
    public UserStatisticsRecord setCpuTime(Double value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.CPU_TIME</code>.
     */
    public Double getCpuTime() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>information_schema.USER_STATISTICS.BYTES_RECEIVED</code>.
     */
    public UserStatisticsRecord setBytesReceived(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.BYTES_RECEIVED</code>.
     */
    public Long getBytesReceived() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>information_schema.USER_STATISTICS.BYTES_SENT</code>.
     */
    public UserStatisticsRecord setBytesSent(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.BYTES_SENT</code>.
     */
    public Long getBytesSent() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>information_schema.USER_STATISTICS.BINLOG_BYTES_WRITTEN</code>.
     */
    public UserStatisticsRecord setBinlogBytesWritten(Long value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.BINLOG_BYTES_WRITTEN</code>.
     */
    public Long getBinlogBytesWritten() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>information_schema.USER_STATISTICS.ROWS_READ</code>.
     */
    public UserStatisticsRecord setRowsRead(Long value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.ROWS_READ</code>.
     */
    public Long getRowsRead() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>information_schema.USER_STATISTICS.ROWS_SENT</code>.
     */
    public UserStatisticsRecord setRowsSent(Long value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.ROWS_SENT</code>.
     */
    public Long getRowsSent() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>information_schema.USER_STATISTICS.ROWS_DELETED</code>.
     */
    public UserStatisticsRecord setRowsDeleted(Long value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.ROWS_DELETED</code>.
     */
    public Long getRowsDeleted() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>information_schema.USER_STATISTICS.ROWS_INSERTED</code>.
     */
    public UserStatisticsRecord setRowsInserted(Long value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.ROWS_INSERTED</code>.
     */
    public Long getRowsInserted() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>information_schema.USER_STATISTICS.ROWS_UPDATED</code>.
     */
    public UserStatisticsRecord setRowsUpdated(Long value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.ROWS_UPDATED</code>.
     */
    public Long getRowsUpdated() {
        return (Long) get(13);
    }

    /**
     * Setter for <code>information_schema.USER_STATISTICS.SELECT_COMMANDS</code>.
     */
    public UserStatisticsRecord setSelectCommands(Long value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.SELECT_COMMANDS</code>.
     */
    public Long getSelectCommands() {
        return (Long) get(14);
    }

    /**
     * Setter for <code>information_schema.USER_STATISTICS.UPDATE_COMMANDS</code>.
     */
    public UserStatisticsRecord setUpdateCommands(Long value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.UPDATE_COMMANDS</code>.
     */
    public Long getUpdateCommands() {
        return (Long) get(15);
    }

    /**
     * Setter for <code>information_schema.USER_STATISTICS.OTHER_COMMANDS</code>.
     */
    public UserStatisticsRecord setOtherCommands(Long value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.OTHER_COMMANDS</code>.
     */
    public Long getOtherCommands() {
        return (Long) get(16);
    }

    /**
     * Setter for <code>information_schema.USER_STATISTICS.COMMIT_TRANSACTIONS</code>.
     */
    public UserStatisticsRecord setCommitTransactions(Long value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.COMMIT_TRANSACTIONS</code>.
     */
    public Long getCommitTransactions() {
        return (Long) get(17);
    }

    /**
     * Setter for <code>information_schema.USER_STATISTICS.ROLLBACK_TRANSACTIONS</code>.
     */
    public UserStatisticsRecord setRollbackTransactions(Long value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.ROLLBACK_TRANSACTIONS</code>.
     */
    public Long getRollbackTransactions() {
        return (Long) get(18);
    }

    /**
     * Setter for <code>information_schema.USER_STATISTICS.DENIED_CONNECTIONS</code>.
     */
    public UserStatisticsRecord setDeniedConnections(Long value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.DENIED_CONNECTIONS</code>.
     */
    public Long getDeniedConnections() {
        return (Long) get(19);
    }

    /**
     * Setter for <code>information_schema.USER_STATISTICS.LOST_CONNECTIONS</code>.
     */
    public UserStatisticsRecord setLostConnections(Long value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.LOST_CONNECTIONS</code>.
     */
    public Long getLostConnections() {
        return (Long) get(20);
    }

    /**
     * Setter for <code>information_schema.USER_STATISTICS.ACCESS_DENIED</code>.
     */
    public UserStatisticsRecord setAccessDenied(Long value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.ACCESS_DENIED</code>.
     */
    public Long getAccessDenied() {
        return (Long) get(21);
    }

    /**
     * Setter for <code>information_schema.USER_STATISTICS.EMPTY_QUERIES</code>.
     */
    public UserStatisticsRecord setEmptyQueries(Long value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.USER_STATISTICS.EMPTY_QUERIES</code>.
     */
    public Long getEmptyQueries() {
        return (Long) get(22);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserStatisticsRecord
     */
    public UserStatisticsRecord() {
        super(UserStatistics.USER_STATISTICS);
    }

    /**
     * Create a detached, initialised UserStatisticsRecord
     */
    public UserStatisticsRecord(String user, Integer totalConnections, Integer concurrentConnections, Integer connectedTime, Double busyTime, Double cpuTime, Long bytesReceived, Long bytesSent, Long binlogBytesWritten, Long rowsRead, Long rowsSent, Long rowsDeleted, Long rowsInserted, Long rowsUpdated, Long selectCommands, Long updateCommands, Long otherCommands, Long commitTransactions, Long rollbackTransactions, Long deniedConnections, Long lostConnections, Long accessDenied, Long emptyQueries) {
        super(UserStatistics.USER_STATISTICS);

        set(0, user);
        set(1, totalConnections);
        set(2, concurrentConnections);
        set(3, connectedTime);
        set(4, busyTime);
        set(5, cpuTime);
        set(6, bytesReceived);
        set(7, bytesSent);
        set(8, binlogBytesWritten);
        set(9, rowsRead);
        set(10, rowsSent);
        set(11, rowsDeleted);
        set(12, rowsInserted);
        set(13, rowsUpdated);
        set(14, selectCommands);
        set(15, updateCommands);
        set(16, otherCommands);
        set(17, commitTransactions);
        set(18, rollbackTransactions);
        set(19, deniedConnections);
        set(20, lostConnections);
        set(21, accessDenied);
        set(22, emptyQueries);
    }
}
