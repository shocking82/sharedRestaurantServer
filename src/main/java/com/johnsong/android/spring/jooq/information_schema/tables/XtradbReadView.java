/*
 * This file is generated by jOOQ.
*/
package com.johnsong.android.spring.jooq.information_schema.tables;


import com.johnsong.android.spring.jooq.information_schema.InformationSchema;
import com.johnsong.android.spring.jooq.information_schema.tables.records.XtradbReadViewRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XtradbReadView extends TableImpl<XtradbReadViewRecord> {

    private static final long serialVersionUID = 2078283113;

    /**
     * The reference instance of <code>information_schema.XTRADB_READ_VIEW</code>
     */
    public static final XtradbReadView XTRADB_READ_VIEW = new XtradbReadView();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<XtradbReadViewRecord> getRecordType() {
        return XtradbReadViewRecord.class;
    }

    /**
     * The column <code>information_schema.XTRADB_READ_VIEW.READ_VIEW_UNDO_NUMBER</code>.
     */
    public final TableField<XtradbReadViewRecord, ULong> READ_VIEW_UNDO_NUMBER = createField("READ_VIEW_UNDO_NUMBER", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.XTRADB_READ_VIEW.READ_VIEW_LOW_LIMIT_TRX_NUMBER</code>.
     */
    public final TableField<XtradbReadViewRecord, String> READ_VIEW_LOW_LIMIT_TRX_NUMBER = createField("READ_VIEW_LOW_LIMIT_TRX_NUMBER", org.jooq.impl.SQLDataType.VARCHAR(18).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>information_schema.XTRADB_READ_VIEW.READ_VIEW_UPPER_LIMIT_TRX_ID</code>.
     */
    public final TableField<XtradbReadViewRecord, String> READ_VIEW_UPPER_LIMIT_TRX_ID = createField("READ_VIEW_UPPER_LIMIT_TRX_ID", org.jooq.impl.SQLDataType.VARCHAR(18).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>information_schema.XTRADB_READ_VIEW.READ_VIEW_LOW_LIMIT_TRX_ID</code>.
     */
    public final TableField<XtradbReadViewRecord, String> READ_VIEW_LOW_LIMIT_TRX_ID = createField("READ_VIEW_LOW_LIMIT_TRX_ID", org.jooq.impl.SQLDataType.VARCHAR(18).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>information_schema.XTRADB_READ_VIEW</code> table reference
     */
    public XtradbReadView() {
        this(DSL.name("XTRADB_READ_VIEW"), null);
    }

    /**
     * Create an aliased <code>information_schema.XTRADB_READ_VIEW</code> table reference
     */
    public XtradbReadView(String alias) {
        this(DSL.name(alias), XTRADB_READ_VIEW);
    }

    /**
     * Create an aliased <code>information_schema.XTRADB_READ_VIEW</code> table reference
     */
    public XtradbReadView(Name alias) {
        this(alias, XTRADB_READ_VIEW);
    }

    private XtradbReadView(Name alias, Table<XtradbReadViewRecord> aliased) {
        this(alias, aliased, null);
    }

    private XtradbReadView(Name alias, Table<XtradbReadViewRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XtradbReadView as(String alias) {
        return new XtradbReadView(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XtradbReadView as(Name alias) {
        return new XtradbReadView(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public XtradbReadView rename(String name) {
        return new XtradbReadView(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public XtradbReadView rename(Name name) {
        return new XtradbReadView(name, null);
    }
}
