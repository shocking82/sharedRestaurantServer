/*
 * This file is generated by jOOQ.
*/
package com.johnsong.android.spring.jooq.information_schema.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Triggers implements Serializable {

    private static final long serialVersionUID = 545873261;

    private final String    triggerCatalog;
    private final String    triggerSchema;
    private final String    triggerName;
    private final String    eventManipulation;
    private final String    eventObjectCatalog;
    private final String    eventObjectSchema;
    private final String    eventObjectTable;
    private final Long      actionOrder;
    private final String    actionCondition;
    private final String    actionStatement;
    private final String    actionOrientation;
    private final String    actionTiming;
    private final String    actionReferenceOldTable;
    private final String    actionReferenceNewTable;
    private final String    actionReferenceOldRow;
    private final String    actionReferenceNewRow;
    private final Timestamp created;
    private final String    sqlMode;
    private final String    definer;
    private final String    characterSetClient;
    private final String    collationConnection;
    private final String    databaseCollation;

    public Triggers(Triggers value) {
        this.triggerCatalog = value.triggerCatalog;
        this.triggerSchema = value.triggerSchema;
        this.triggerName = value.triggerName;
        this.eventManipulation = value.eventManipulation;
        this.eventObjectCatalog = value.eventObjectCatalog;
        this.eventObjectSchema = value.eventObjectSchema;
        this.eventObjectTable = value.eventObjectTable;
        this.actionOrder = value.actionOrder;
        this.actionCondition = value.actionCondition;
        this.actionStatement = value.actionStatement;
        this.actionOrientation = value.actionOrientation;
        this.actionTiming = value.actionTiming;
        this.actionReferenceOldTable = value.actionReferenceOldTable;
        this.actionReferenceNewTable = value.actionReferenceNewTable;
        this.actionReferenceOldRow = value.actionReferenceOldRow;
        this.actionReferenceNewRow = value.actionReferenceNewRow;
        this.created = value.created;
        this.sqlMode = value.sqlMode;
        this.definer = value.definer;
        this.characterSetClient = value.characterSetClient;
        this.collationConnection = value.collationConnection;
        this.databaseCollation = value.databaseCollation;
    }

    public Triggers(
        String    triggerCatalog,
        String    triggerSchema,
        String    triggerName,
        String    eventManipulation,
        String    eventObjectCatalog,
        String    eventObjectSchema,
        String    eventObjectTable,
        Long      actionOrder,
        String    actionCondition,
        String    actionStatement,
        String    actionOrientation,
        String    actionTiming,
        String    actionReferenceOldTable,
        String    actionReferenceNewTable,
        String    actionReferenceOldRow,
        String    actionReferenceNewRow,
        Timestamp created,
        String    sqlMode,
        String    definer,
        String    characterSetClient,
        String    collationConnection,
        String    databaseCollation
    ) {
        this.triggerCatalog = triggerCatalog;
        this.triggerSchema = triggerSchema;
        this.triggerName = triggerName;
        this.eventManipulation = eventManipulation;
        this.eventObjectCatalog = eventObjectCatalog;
        this.eventObjectSchema = eventObjectSchema;
        this.eventObjectTable = eventObjectTable;
        this.actionOrder = actionOrder;
        this.actionCondition = actionCondition;
        this.actionStatement = actionStatement;
        this.actionOrientation = actionOrientation;
        this.actionTiming = actionTiming;
        this.actionReferenceOldTable = actionReferenceOldTable;
        this.actionReferenceNewTable = actionReferenceNewTable;
        this.actionReferenceOldRow = actionReferenceOldRow;
        this.actionReferenceNewRow = actionReferenceNewRow;
        this.created = created;
        this.sqlMode = sqlMode;
        this.definer = definer;
        this.characterSetClient = characterSetClient;
        this.collationConnection = collationConnection;
        this.databaseCollation = databaseCollation;
    }

    public String getTriggerCatalog() {
        return this.triggerCatalog;
    }

    public String getTriggerSchema() {
        return this.triggerSchema;
    }

    public String getTriggerName() {
        return this.triggerName;
    }

    public String getEventManipulation() {
        return this.eventManipulation;
    }

    public String getEventObjectCatalog() {
        return this.eventObjectCatalog;
    }

    public String getEventObjectSchema() {
        return this.eventObjectSchema;
    }

    public String getEventObjectTable() {
        return this.eventObjectTable;
    }

    public Long getActionOrder() {
        return this.actionOrder;
    }

    public String getActionCondition() {
        return this.actionCondition;
    }

    public String getActionStatement() {
        return this.actionStatement;
    }

    public String getActionOrientation() {
        return this.actionOrientation;
    }

    public String getActionTiming() {
        return this.actionTiming;
    }

    public String getActionReferenceOldTable() {
        return this.actionReferenceOldTable;
    }

    public String getActionReferenceNewTable() {
        return this.actionReferenceNewTable;
    }

    public String getActionReferenceOldRow() {
        return this.actionReferenceOldRow;
    }

    public String getActionReferenceNewRow() {
        return this.actionReferenceNewRow;
    }

    public Timestamp getCreated() {
        return this.created;
    }

    public String getSqlMode() {
        return this.sqlMode;
    }

    public String getDefiner() {
        return this.definer;
    }

    public String getCharacterSetClient() {
        return this.characterSetClient;
    }

    public String getCollationConnection() {
        return this.collationConnection;
    }

    public String getDatabaseCollation() {
        return this.databaseCollation;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Triggers (");

        sb.append(triggerCatalog);
        sb.append(", ").append(triggerSchema);
        sb.append(", ").append(triggerName);
        sb.append(", ").append(eventManipulation);
        sb.append(", ").append(eventObjectCatalog);
        sb.append(", ").append(eventObjectSchema);
        sb.append(", ").append(eventObjectTable);
        sb.append(", ").append(actionOrder);
        sb.append(", ").append(actionCondition);
        sb.append(", ").append(actionStatement);
        sb.append(", ").append(actionOrientation);
        sb.append(", ").append(actionTiming);
        sb.append(", ").append(actionReferenceOldTable);
        sb.append(", ").append(actionReferenceNewTable);
        sb.append(", ").append(actionReferenceOldRow);
        sb.append(", ").append(actionReferenceNewRow);
        sb.append(", ").append(created);
        sb.append(", ").append(sqlMode);
        sb.append(", ").append(definer);
        sb.append(", ").append(characterSetClient);
        sb.append(", ").append(collationConnection);
        sb.append(", ").append(databaseCollation);

        sb.append(")");
        return sb.toString();
    }
}
