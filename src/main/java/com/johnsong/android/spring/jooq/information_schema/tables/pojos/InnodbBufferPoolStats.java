/*
 * This file is generated by jOOQ.
*/
package com.johnsong.android.spring.jooq.information_schema.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;

import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbBufferPoolStats implements Serializable {

    private static final long serialVersionUID = -589302875;

    private final ULong  poolId;
    private final ULong  poolSize;
    private final ULong  freeBuffers;
    private final ULong  databasePages;
    private final ULong  oldDatabasePages;
    private final ULong  modifiedDatabasePages;
    private final ULong  pendingDecompress;
    private final ULong  pendingReads;
    private final ULong  pendingFlushLru;
    private final ULong  pendingFlushList;
    private final ULong  pagesMadeYoung;
    private final ULong  pagesNotMadeYoung;
    private final Double pagesMadeYoungRate;
    private final Double pagesMadeNotYoungRate;
    private final ULong  numberPagesRead;
    private final ULong  numberPagesCreated;
    private final ULong  numberPagesWritten;
    private final Double pagesReadRate;
    private final Double pagesCreateRate;
    private final Double pagesWrittenRate;
    private final ULong  numberPagesGet;
    private final ULong  hitRate;
    private final ULong  youngMakePerThousandGets;
    private final ULong  notYoungMakePerThousandGets;
    private final ULong  numberPagesReadAhead;
    private final ULong  numberReadAheadEvicted;
    private final Double readAheadRate;
    private final Double readAheadEvictedRate;
    private final ULong  lruIoTotal;
    private final ULong  lruIoCurrent;
    private final ULong  uncompressTotal;
    private final ULong  uncompressCurrent;

    public InnodbBufferPoolStats(InnodbBufferPoolStats value) {
        this.poolId = value.poolId;
        this.poolSize = value.poolSize;
        this.freeBuffers = value.freeBuffers;
        this.databasePages = value.databasePages;
        this.oldDatabasePages = value.oldDatabasePages;
        this.modifiedDatabasePages = value.modifiedDatabasePages;
        this.pendingDecompress = value.pendingDecompress;
        this.pendingReads = value.pendingReads;
        this.pendingFlushLru = value.pendingFlushLru;
        this.pendingFlushList = value.pendingFlushList;
        this.pagesMadeYoung = value.pagesMadeYoung;
        this.pagesNotMadeYoung = value.pagesNotMadeYoung;
        this.pagesMadeYoungRate = value.pagesMadeYoungRate;
        this.pagesMadeNotYoungRate = value.pagesMadeNotYoungRate;
        this.numberPagesRead = value.numberPagesRead;
        this.numberPagesCreated = value.numberPagesCreated;
        this.numberPagesWritten = value.numberPagesWritten;
        this.pagesReadRate = value.pagesReadRate;
        this.pagesCreateRate = value.pagesCreateRate;
        this.pagesWrittenRate = value.pagesWrittenRate;
        this.numberPagesGet = value.numberPagesGet;
        this.hitRate = value.hitRate;
        this.youngMakePerThousandGets = value.youngMakePerThousandGets;
        this.notYoungMakePerThousandGets = value.notYoungMakePerThousandGets;
        this.numberPagesReadAhead = value.numberPagesReadAhead;
        this.numberReadAheadEvicted = value.numberReadAheadEvicted;
        this.readAheadRate = value.readAheadRate;
        this.readAheadEvictedRate = value.readAheadEvictedRate;
        this.lruIoTotal = value.lruIoTotal;
        this.lruIoCurrent = value.lruIoCurrent;
        this.uncompressTotal = value.uncompressTotal;
        this.uncompressCurrent = value.uncompressCurrent;
    }

    public InnodbBufferPoolStats(
        ULong  poolId,
        ULong  poolSize,
        ULong  freeBuffers,
        ULong  databasePages,
        ULong  oldDatabasePages,
        ULong  modifiedDatabasePages,
        ULong  pendingDecompress,
        ULong  pendingReads,
        ULong  pendingFlushLru,
        ULong  pendingFlushList,
        ULong  pagesMadeYoung,
        ULong  pagesNotMadeYoung,
        Double pagesMadeYoungRate,
        Double pagesMadeNotYoungRate,
        ULong  numberPagesRead,
        ULong  numberPagesCreated,
        ULong  numberPagesWritten,
        Double pagesReadRate,
        Double pagesCreateRate,
        Double pagesWrittenRate,
        ULong  numberPagesGet,
        ULong  hitRate,
        ULong  youngMakePerThousandGets,
        ULong  notYoungMakePerThousandGets,
        ULong  numberPagesReadAhead,
        ULong  numberReadAheadEvicted,
        Double readAheadRate,
        Double readAheadEvictedRate,
        ULong  lruIoTotal,
        ULong  lruIoCurrent,
        ULong  uncompressTotal,
        ULong  uncompressCurrent
    ) {
        this.poolId = poolId;
        this.poolSize = poolSize;
        this.freeBuffers = freeBuffers;
        this.databasePages = databasePages;
        this.oldDatabasePages = oldDatabasePages;
        this.modifiedDatabasePages = modifiedDatabasePages;
        this.pendingDecompress = pendingDecompress;
        this.pendingReads = pendingReads;
        this.pendingFlushLru = pendingFlushLru;
        this.pendingFlushList = pendingFlushList;
        this.pagesMadeYoung = pagesMadeYoung;
        this.pagesNotMadeYoung = pagesNotMadeYoung;
        this.pagesMadeYoungRate = pagesMadeYoungRate;
        this.pagesMadeNotYoungRate = pagesMadeNotYoungRate;
        this.numberPagesRead = numberPagesRead;
        this.numberPagesCreated = numberPagesCreated;
        this.numberPagesWritten = numberPagesWritten;
        this.pagesReadRate = pagesReadRate;
        this.pagesCreateRate = pagesCreateRate;
        this.pagesWrittenRate = pagesWrittenRate;
        this.numberPagesGet = numberPagesGet;
        this.hitRate = hitRate;
        this.youngMakePerThousandGets = youngMakePerThousandGets;
        this.notYoungMakePerThousandGets = notYoungMakePerThousandGets;
        this.numberPagesReadAhead = numberPagesReadAhead;
        this.numberReadAheadEvicted = numberReadAheadEvicted;
        this.readAheadRate = readAheadRate;
        this.readAheadEvictedRate = readAheadEvictedRate;
        this.lruIoTotal = lruIoTotal;
        this.lruIoCurrent = lruIoCurrent;
        this.uncompressTotal = uncompressTotal;
        this.uncompressCurrent = uncompressCurrent;
    }

    public ULong getPoolId() {
        return this.poolId;
    }

    public ULong getPoolSize() {
        return this.poolSize;
    }

    public ULong getFreeBuffers() {
        return this.freeBuffers;
    }

    public ULong getDatabasePages() {
        return this.databasePages;
    }

    public ULong getOldDatabasePages() {
        return this.oldDatabasePages;
    }

    public ULong getModifiedDatabasePages() {
        return this.modifiedDatabasePages;
    }

    public ULong getPendingDecompress() {
        return this.pendingDecompress;
    }

    public ULong getPendingReads() {
        return this.pendingReads;
    }

    public ULong getPendingFlushLru() {
        return this.pendingFlushLru;
    }

    public ULong getPendingFlushList() {
        return this.pendingFlushList;
    }

    public ULong getPagesMadeYoung() {
        return this.pagesMadeYoung;
    }

    public ULong getPagesNotMadeYoung() {
        return this.pagesNotMadeYoung;
    }

    public Double getPagesMadeYoungRate() {
        return this.pagesMadeYoungRate;
    }

    public Double getPagesMadeNotYoungRate() {
        return this.pagesMadeNotYoungRate;
    }

    public ULong getNumberPagesRead() {
        return this.numberPagesRead;
    }

    public ULong getNumberPagesCreated() {
        return this.numberPagesCreated;
    }

    public ULong getNumberPagesWritten() {
        return this.numberPagesWritten;
    }

    public Double getPagesReadRate() {
        return this.pagesReadRate;
    }

    public Double getPagesCreateRate() {
        return this.pagesCreateRate;
    }

    public Double getPagesWrittenRate() {
        return this.pagesWrittenRate;
    }

    public ULong getNumberPagesGet() {
        return this.numberPagesGet;
    }

    public ULong getHitRate() {
        return this.hitRate;
    }

    public ULong getYoungMakePerThousandGets() {
        return this.youngMakePerThousandGets;
    }

    public ULong getNotYoungMakePerThousandGets() {
        return this.notYoungMakePerThousandGets;
    }

    public ULong getNumberPagesReadAhead() {
        return this.numberPagesReadAhead;
    }

    public ULong getNumberReadAheadEvicted() {
        return this.numberReadAheadEvicted;
    }

    public Double getReadAheadRate() {
        return this.readAheadRate;
    }

    public Double getReadAheadEvictedRate() {
        return this.readAheadEvictedRate;
    }

    public ULong getLruIoTotal() {
        return this.lruIoTotal;
    }

    public ULong getLruIoCurrent() {
        return this.lruIoCurrent;
    }

    public ULong getUncompressTotal() {
        return this.uncompressTotal;
    }

    public ULong getUncompressCurrent() {
        return this.uncompressCurrent;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("InnodbBufferPoolStats (");

        sb.append(poolId);
        sb.append(", ").append(poolSize);
        sb.append(", ").append(freeBuffers);
        sb.append(", ").append(databasePages);
        sb.append(", ").append(oldDatabasePages);
        sb.append(", ").append(modifiedDatabasePages);
        sb.append(", ").append(pendingDecompress);
        sb.append(", ").append(pendingReads);
        sb.append(", ").append(pendingFlushLru);
        sb.append(", ").append(pendingFlushList);
        sb.append(", ").append(pagesMadeYoung);
        sb.append(", ").append(pagesNotMadeYoung);
        sb.append(", ").append(pagesMadeYoungRate);
        sb.append(", ").append(pagesMadeNotYoungRate);
        sb.append(", ").append(numberPagesRead);
        sb.append(", ").append(numberPagesCreated);
        sb.append(", ").append(numberPagesWritten);
        sb.append(", ").append(pagesReadRate);
        sb.append(", ").append(pagesCreateRate);
        sb.append(", ").append(pagesWrittenRate);
        sb.append(", ").append(numberPagesGet);
        sb.append(", ").append(hitRate);
        sb.append(", ").append(youngMakePerThousandGets);
        sb.append(", ").append(notYoungMakePerThousandGets);
        sb.append(", ").append(numberPagesReadAhead);
        sb.append(", ").append(numberReadAheadEvicted);
        sb.append(", ").append(readAheadRate);
        sb.append(", ").append(readAheadEvictedRate);
        sb.append(", ").append(lruIoTotal);
        sb.append(", ").append(lruIoCurrent);
        sb.append(", ").append(uncompressTotal);
        sb.append(", ").append(uncompressCurrent);

        sb.append(")");
        return sb.toString();
    }
}
