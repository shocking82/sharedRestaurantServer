/*
 * This file is generated by jOOQ.
*/
package com.johnsong.android.spring.jooq.information_schema.tables;


import com.johnsong.android.spring.jooq.information_schema.InformationSchema;
import com.johnsong.android.spring.jooq.information_schema.tables.records.XtradbRsegRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XtradbRseg extends TableImpl<XtradbRsegRecord> {

    private static final long serialVersionUID = 393233367;

    /**
     * The reference instance of <code>information_schema.XTRADB_RSEG</code>
     */
    public static final XtradbRseg XTRADB_RSEG = new XtradbRseg();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<XtradbRsegRecord> getRecordType() {
        return XtradbRsegRecord.class;
    }

    /**
     * The column <code>information_schema.XTRADB_RSEG.rseg_id</code>.
     */
    public final TableField<XtradbRsegRecord, ULong> RSEG_ID = createField("rseg_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.XTRADB_RSEG.space_id</code>.
     */
    public final TableField<XtradbRsegRecord, ULong> SPACE_ID = createField("space_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.XTRADB_RSEG.zip_size</code>.
     */
    public final TableField<XtradbRsegRecord, ULong> ZIP_SIZE = createField("zip_size", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.XTRADB_RSEG.page_no</code>.
     */
    public final TableField<XtradbRsegRecord, ULong> PAGE_NO = createField("page_no", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.XTRADB_RSEG.max_size</code>.
     */
    public final TableField<XtradbRsegRecord, ULong> MAX_SIZE = createField("max_size", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.XTRADB_RSEG.curr_size</code>.
     */
    public final TableField<XtradbRsegRecord, ULong> CURR_SIZE = createField("curr_size", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * Create a <code>information_schema.XTRADB_RSEG</code> table reference
     */
    public XtradbRseg() {
        this(DSL.name("XTRADB_RSEG"), null);
    }

    /**
     * Create an aliased <code>information_schema.XTRADB_RSEG</code> table reference
     */
    public XtradbRseg(String alias) {
        this(DSL.name(alias), XTRADB_RSEG);
    }

    /**
     * Create an aliased <code>information_schema.XTRADB_RSEG</code> table reference
     */
    public XtradbRseg(Name alias) {
        this(alias, XTRADB_RSEG);
    }

    private XtradbRseg(Name alias, Table<XtradbRsegRecord> aliased) {
        this(alias, aliased, null);
    }

    private XtradbRseg(Name alias, Table<XtradbRsegRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XtradbRseg as(String alias) {
        return new XtradbRseg(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XtradbRseg as(Name alias) {
        return new XtradbRseg(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public XtradbRseg rename(String name) {
        return new XtradbRseg(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public XtradbRseg rename(Name name) {
        return new XtradbRseg(name, null);
    }
}
