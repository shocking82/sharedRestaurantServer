/*
 * This file is generated by jOOQ.
*/
package com.johnsong.android.spring.jooq.information_schema.tables;


import com.johnsong.android.spring.jooq.information_schema.InformationSchema;
import com.johnsong.android.spring.jooq.information_schema.tables.records.XtradbInternalHashTablesRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XtradbInternalHashTables extends TableImpl<XtradbInternalHashTablesRecord> {

    private static final long serialVersionUID = 1733554701;

    /**
     * The reference instance of <code>information_schema.XTRADB_INTERNAL_HASH_TABLES</code>
     */
    public static final XtradbInternalHashTables XTRADB_INTERNAL_HASH_TABLES = new XtradbInternalHashTables();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<XtradbInternalHashTablesRecord> getRecordType() {
        return XtradbInternalHashTablesRecord.class;
    }

    /**
     * The column <code>information_schema.XTRADB_INTERNAL_HASH_TABLES.INTERNAL_HASH_TABLE_NAME</code>.
     */
    public final TableField<XtradbInternalHashTablesRecord, String> INTERNAL_HASH_TABLE_NAME = createField("INTERNAL_HASH_TABLE_NAME", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.field("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>information_schema.XTRADB_INTERNAL_HASH_TABLES.TOTAL_MEMORY</code>.
     */
    public final TableField<XtradbInternalHashTablesRecord, ULong> TOTAL_MEMORY = createField("TOTAL_MEMORY", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.XTRADB_INTERNAL_HASH_TABLES.CONSTANT_MEMORY</code>.
     */
    public final TableField<XtradbInternalHashTablesRecord, ULong> CONSTANT_MEMORY = createField("CONSTANT_MEMORY", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.XTRADB_INTERNAL_HASH_TABLES.VARIABLE_MEMORY</code>.
     */
    public final TableField<XtradbInternalHashTablesRecord, ULong> VARIABLE_MEMORY = createField("VARIABLE_MEMORY", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * Create a <code>information_schema.XTRADB_INTERNAL_HASH_TABLES</code> table reference
     */
    public XtradbInternalHashTables() {
        this(DSL.name("XTRADB_INTERNAL_HASH_TABLES"), null);
    }

    /**
     * Create an aliased <code>information_schema.XTRADB_INTERNAL_HASH_TABLES</code> table reference
     */
    public XtradbInternalHashTables(String alias) {
        this(DSL.name(alias), XTRADB_INTERNAL_HASH_TABLES);
    }

    /**
     * Create an aliased <code>information_schema.XTRADB_INTERNAL_HASH_TABLES</code> table reference
     */
    public XtradbInternalHashTables(Name alias) {
        this(alias, XTRADB_INTERNAL_HASH_TABLES);
    }

    private XtradbInternalHashTables(Name alias, Table<XtradbInternalHashTablesRecord> aliased) {
        this(alias, aliased, null);
    }

    private XtradbInternalHashTables(Name alias, Table<XtradbInternalHashTablesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XtradbInternalHashTables as(String alias) {
        return new XtradbInternalHashTables(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XtradbInternalHashTables as(Name alias) {
        return new XtradbInternalHashTables(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public XtradbInternalHashTables rename(String name) {
        return new XtradbInternalHashTables(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public XtradbInternalHashTables rename(Name name) {
        return new XtradbInternalHashTables(name, null);
    }
}
