/*
 * This file is generated by jOOQ.
*/
package com.johnsong.android.spring.jooq.tables.records;


import com.johnsong.android.spring.jooq.tables.Region;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RegionRecord extends TableRecordImpl<RegionRecord> implements Record3<Integer, String, Integer> {

    private static final long serialVersionUID = -184851241;

    /**
     * Setter for <code>banana.Region.region_id</code>.
     */
    public RegionRecord setRegionId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>banana.Region.region_id</code>.
     */
    public Integer getRegionId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>banana.Region.region_name</code>.
     */
    public RegionRecord setRegionName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>banana.Region.region_name</code>.
     */
    public String getRegionName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>banana.Region.city_id</code>.
     */
    public RegionRecord setCityId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>banana.Region.city_id</code>.
     */
    public Integer getCityId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Region.REGION.REGION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Region.REGION.REGION_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Region.REGION.CITY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getRegionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getRegionName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getCityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getRegionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getRegionName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getCityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegionRecord value1(Integer value) {
        setRegionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegionRecord value2(String value) {
        setRegionName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegionRecord value3(Integer value) {
        setCityId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegionRecord values(Integer value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RegionRecord
     */
    public RegionRecord() {
        super(Region.REGION);
    }

    /**
     * Create a detached, initialised RegionRecord
     */
    public RegionRecord(Integer regionId, String regionName, Integer cityId) {
        super(Region.REGION);

        set(0, regionId);
        set(1, regionName);
        set(2, cityId);
    }
}
