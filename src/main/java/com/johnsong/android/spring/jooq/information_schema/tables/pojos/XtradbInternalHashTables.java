/*
 * This file is generated by jOOQ.
*/
package com.johnsong.android.spring.jooq.information_schema.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;

import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XtradbInternalHashTables implements Serializable {

    private static final long serialVersionUID = 1762871185;

    private final String internalHashTableName;
    private final ULong  totalMemory;
    private final ULong  constantMemory;
    private final ULong  variableMemory;

    public XtradbInternalHashTables(XtradbInternalHashTables value) {
        this.internalHashTableName = value.internalHashTableName;
        this.totalMemory = value.totalMemory;
        this.constantMemory = value.constantMemory;
        this.variableMemory = value.variableMemory;
    }

    public XtradbInternalHashTables(
        String internalHashTableName,
        ULong  totalMemory,
        ULong  constantMemory,
        ULong  variableMemory
    ) {
        this.internalHashTableName = internalHashTableName;
        this.totalMemory = totalMemory;
        this.constantMemory = constantMemory;
        this.variableMemory = variableMemory;
    }

    public String getInternalHashTableName() {
        return this.internalHashTableName;
    }

    public ULong getTotalMemory() {
        return this.totalMemory;
    }

    public ULong getConstantMemory() {
        return this.constantMemory;
    }

    public ULong getVariableMemory() {
        return this.variableMemory;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("XtradbInternalHashTables (");

        sb.append(internalHashTableName);
        sb.append(", ").append(totalMemory);
        sb.append(", ").append(constantMemory);
        sb.append(", ").append(variableMemory);

        sb.append(")");
        return sb.toString();
    }
}
