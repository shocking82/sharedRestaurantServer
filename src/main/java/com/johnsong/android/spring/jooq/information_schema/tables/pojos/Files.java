/*
 * This file is generated by jOOQ.
*/
package com.johnsong.android.spring.jooq.information_schema.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Files implements Serializable {

    private static final long serialVersionUID = 1596811939;

    private final Long      fileId;
    private final String    fileName;
    private final String    fileType;
    private final String    tablespaceName;
    private final String    tableCatalog;
    private final String    tableSchema;
    private final String    tableName;
    private final String    logfileGroupName;
    private final Long      logfileGroupNumber;
    private final String    engine;
    private final String    fulltextKeys;
    private final Long      deletedRows;
    private final Long      updateCount;
    private final Long      freeExtents;
    private final Long      totalExtents;
    private final Long      extentSize;
    private final ULong     initialSize;
    private final ULong     maximumSize;
    private final ULong     autoextendSize;
    private final Timestamp creationTime;
    private final Timestamp lastUpdateTime;
    private final Timestamp lastAccessTime;
    private final Long      recoverTime;
    private final Long      transactionCounter;
    private final ULong     version;
    private final String    rowFormat;
    private final ULong     tableRows;
    private final ULong     avgRowLength;
    private final ULong     dataLength;
    private final ULong     maxDataLength;
    private final ULong     indexLength;
    private final ULong     dataFree;
    private final Timestamp createTime;
    private final Timestamp updateTime;
    private final Timestamp checkTime;
    private final ULong     checksum;
    private final String    status;
    private final String    extra;

    public Files(Files value) {
        this.fileId = value.fileId;
        this.fileName = value.fileName;
        this.fileType = value.fileType;
        this.tablespaceName = value.tablespaceName;
        this.tableCatalog = value.tableCatalog;
        this.tableSchema = value.tableSchema;
        this.tableName = value.tableName;
        this.logfileGroupName = value.logfileGroupName;
        this.logfileGroupNumber = value.logfileGroupNumber;
        this.engine = value.engine;
        this.fulltextKeys = value.fulltextKeys;
        this.deletedRows = value.deletedRows;
        this.updateCount = value.updateCount;
        this.freeExtents = value.freeExtents;
        this.totalExtents = value.totalExtents;
        this.extentSize = value.extentSize;
        this.initialSize = value.initialSize;
        this.maximumSize = value.maximumSize;
        this.autoextendSize = value.autoextendSize;
        this.creationTime = value.creationTime;
        this.lastUpdateTime = value.lastUpdateTime;
        this.lastAccessTime = value.lastAccessTime;
        this.recoverTime = value.recoverTime;
        this.transactionCounter = value.transactionCounter;
        this.version = value.version;
        this.rowFormat = value.rowFormat;
        this.tableRows = value.tableRows;
        this.avgRowLength = value.avgRowLength;
        this.dataLength = value.dataLength;
        this.maxDataLength = value.maxDataLength;
        this.indexLength = value.indexLength;
        this.dataFree = value.dataFree;
        this.createTime = value.createTime;
        this.updateTime = value.updateTime;
        this.checkTime = value.checkTime;
        this.checksum = value.checksum;
        this.status = value.status;
        this.extra = value.extra;
    }

    public Files(
        Long      fileId,
        String    fileName,
        String    fileType,
        String    tablespaceName,
        String    tableCatalog,
        String    tableSchema,
        String    tableName,
        String    logfileGroupName,
        Long      logfileGroupNumber,
        String    engine,
        String    fulltextKeys,
        Long      deletedRows,
        Long      updateCount,
        Long      freeExtents,
        Long      totalExtents,
        Long      extentSize,
        ULong     initialSize,
        ULong     maximumSize,
        ULong     autoextendSize,
        Timestamp creationTime,
        Timestamp lastUpdateTime,
        Timestamp lastAccessTime,
        Long      recoverTime,
        Long      transactionCounter,
        ULong     version,
        String    rowFormat,
        ULong     tableRows,
        ULong     avgRowLength,
        ULong     dataLength,
        ULong     maxDataLength,
        ULong     indexLength,
        ULong     dataFree,
        Timestamp createTime,
        Timestamp updateTime,
        Timestamp checkTime,
        ULong     checksum,
        String    status,
        String    extra
    ) {
        this.fileId = fileId;
        this.fileName = fileName;
        this.fileType = fileType;
        this.tablespaceName = tablespaceName;
        this.tableCatalog = tableCatalog;
        this.tableSchema = tableSchema;
        this.tableName = tableName;
        this.logfileGroupName = logfileGroupName;
        this.logfileGroupNumber = logfileGroupNumber;
        this.engine = engine;
        this.fulltextKeys = fulltextKeys;
        this.deletedRows = deletedRows;
        this.updateCount = updateCount;
        this.freeExtents = freeExtents;
        this.totalExtents = totalExtents;
        this.extentSize = extentSize;
        this.initialSize = initialSize;
        this.maximumSize = maximumSize;
        this.autoextendSize = autoextendSize;
        this.creationTime = creationTime;
        this.lastUpdateTime = lastUpdateTime;
        this.lastAccessTime = lastAccessTime;
        this.recoverTime = recoverTime;
        this.transactionCounter = transactionCounter;
        this.version = version;
        this.rowFormat = rowFormat;
        this.tableRows = tableRows;
        this.avgRowLength = avgRowLength;
        this.dataLength = dataLength;
        this.maxDataLength = maxDataLength;
        this.indexLength = indexLength;
        this.dataFree = dataFree;
        this.createTime = createTime;
        this.updateTime = updateTime;
        this.checkTime = checkTime;
        this.checksum = checksum;
        this.status = status;
        this.extra = extra;
    }

    public Long getFileId() {
        return this.fileId;
    }

    public String getFileName() {
        return this.fileName;
    }

    public String getFileType() {
        return this.fileType;
    }

    public String getTablespaceName() {
        return this.tablespaceName;
    }

    public String getTableCatalog() {
        return this.tableCatalog;
    }

    public String getTableSchema() {
        return this.tableSchema;
    }

    public String getTableName() {
        return this.tableName;
    }

    public String getLogfileGroupName() {
        return this.logfileGroupName;
    }

    public Long getLogfileGroupNumber() {
        return this.logfileGroupNumber;
    }

    public String getEngine() {
        return this.engine;
    }

    public String getFulltextKeys() {
        return this.fulltextKeys;
    }

    public Long getDeletedRows() {
        return this.deletedRows;
    }

    public Long getUpdateCount() {
        return this.updateCount;
    }

    public Long getFreeExtents() {
        return this.freeExtents;
    }

    public Long getTotalExtents() {
        return this.totalExtents;
    }

    public Long getExtentSize() {
        return this.extentSize;
    }

    public ULong getInitialSize() {
        return this.initialSize;
    }

    public ULong getMaximumSize() {
        return this.maximumSize;
    }

    public ULong getAutoextendSize() {
        return this.autoextendSize;
    }

    public Timestamp getCreationTime() {
        return this.creationTime;
    }

    public Timestamp getLastUpdateTime() {
        return this.lastUpdateTime;
    }

    public Timestamp getLastAccessTime() {
        return this.lastAccessTime;
    }

    public Long getRecoverTime() {
        return this.recoverTime;
    }

    public Long getTransactionCounter() {
        return this.transactionCounter;
    }

    public ULong getVersion() {
        return this.version;
    }

    public String getRowFormat() {
        return this.rowFormat;
    }

    public ULong getTableRows() {
        return this.tableRows;
    }

    public ULong getAvgRowLength() {
        return this.avgRowLength;
    }

    public ULong getDataLength() {
        return this.dataLength;
    }

    public ULong getMaxDataLength() {
        return this.maxDataLength;
    }

    public ULong getIndexLength() {
        return this.indexLength;
    }

    public ULong getDataFree() {
        return this.dataFree;
    }

    public Timestamp getCreateTime() {
        return this.createTime;
    }

    public Timestamp getUpdateTime() {
        return this.updateTime;
    }

    public Timestamp getCheckTime() {
        return this.checkTime;
    }

    public ULong getChecksum() {
        return this.checksum;
    }

    public String getStatus() {
        return this.status;
    }

    public String getExtra() {
        return this.extra;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Files (");

        sb.append(fileId);
        sb.append(", ").append(fileName);
        sb.append(", ").append(fileType);
        sb.append(", ").append(tablespaceName);
        sb.append(", ").append(tableCatalog);
        sb.append(", ").append(tableSchema);
        sb.append(", ").append(tableName);
        sb.append(", ").append(logfileGroupName);
        sb.append(", ").append(logfileGroupNumber);
        sb.append(", ").append(engine);
        sb.append(", ").append(fulltextKeys);
        sb.append(", ").append(deletedRows);
        sb.append(", ").append(updateCount);
        sb.append(", ").append(freeExtents);
        sb.append(", ").append(totalExtents);
        sb.append(", ").append(extentSize);
        sb.append(", ").append(initialSize);
        sb.append(", ").append(maximumSize);
        sb.append(", ").append(autoextendSize);
        sb.append(", ").append(creationTime);
        sb.append(", ").append(lastUpdateTime);
        sb.append(", ").append(lastAccessTime);
        sb.append(", ").append(recoverTime);
        sb.append(", ").append(transactionCounter);
        sb.append(", ").append(version);
        sb.append(", ").append(rowFormat);
        sb.append(", ").append(tableRows);
        sb.append(", ").append(avgRowLength);
        sb.append(", ").append(dataLength);
        sb.append(", ").append(maxDataLength);
        sb.append(", ").append(indexLength);
        sb.append(", ").append(dataFree);
        sb.append(", ").append(createTime);
        sb.append(", ").append(updateTime);
        sb.append(", ").append(checkTime);
        sb.append(", ").append(checksum);
        sb.append(", ").append(status);
        sb.append(", ").append(extra);

        sb.append(")");
        return sb.toString();
    }
}
