/*
 * This file is generated by jOOQ.
*/
package com.johnsong.android.spring.jooq.information_schema.tables.records;


import com.johnsong.android.spring.jooq.information_schema.tables.XtradbInternalHashTables;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XtradbInternalHashTablesRecord extends TableRecordImpl<XtradbInternalHashTablesRecord> implements Record4<String, ULong, ULong, ULong> {

    private static final long serialVersionUID = 1543364578;

    /**
     * Setter for <code>information_schema.XTRADB_INTERNAL_HASH_TABLES.INTERNAL_HASH_TABLE_NAME</code>.
     */
    public XtradbInternalHashTablesRecord setInternalHashTableName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.XTRADB_INTERNAL_HASH_TABLES.INTERNAL_HASH_TABLE_NAME</code>.
     */
    public String getInternalHashTableName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>information_schema.XTRADB_INTERNAL_HASH_TABLES.TOTAL_MEMORY</code>.
     */
    public XtradbInternalHashTablesRecord setTotalMemory(ULong value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.XTRADB_INTERNAL_HASH_TABLES.TOTAL_MEMORY</code>.
     */
    public ULong getTotalMemory() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>information_schema.XTRADB_INTERNAL_HASH_TABLES.CONSTANT_MEMORY</code>.
     */
    public XtradbInternalHashTablesRecord setConstantMemory(ULong value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.XTRADB_INTERNAL_HASH_TABLES.CONSTANT_MEMORY</code>.
     */
    public ULong getConstantMemory() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>information_schema.XTRADB_INTERNAL_HASH_TABLES.VARIABLE_MEMORY</code>.
     */
    public XtradbInternalHashTablesRecord setVariableMemory(ULong value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>information_schema.XTRADB_INTERNAL_HASH_TABLES.VARIABLE_MEMORY</code>.
     */
    public ULong getVariableMemory() {
        return (ULong) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, ULong, ULong, ULong> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, ULong, ULong, ULong> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return XtradbInternalHashTables.XTRADB_INTERNAL_HASH_TABLES.INTERNAL_HASH_TABLE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field2() {
        return XtradbInternalHashTables.XTRADB_INTERNAL_HASH_TABLES.TOTAL_MEMORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field3() {
        return XtradbInternalHashTables.XTRADB_INTERNAL_HASH_TABLES.CONSTANT_MEMORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field4() {
        return XtradbInternalHashTables.XTRADB_INTERNAL_HASH_TABLES.VARIABLE_MEMORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getInternalHashTableName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component2() {
        return getTotalMemory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component3() {
        return getConstantMemory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component4() {
        return getVariableMemory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getInternalHashTableName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value2() {
        return getTotalMemory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value3() {
        return getConstantMemory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value4() {
        return getVariableMemory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XtradbInternalHashTablesRecord value1(String value) {
        setInternalHashTableName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XtradbInternalHashTablesRecord value2(ULong value) {
        setTotalMemory(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XtradbInternalHashTablesRecord value3(ULong value) {
        setConstantMemory(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XtradbInternalHashTablesRecord value4(ULong value) {
        setVariableMemory(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XtradbInternalHashTablesRecord values(String value1, ULong value2, ULong value3, ULong value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached XtradbInternalHashTablesRecord
     */
    public XtradbInternalHashTablesRecord() {
        super(XtradbInternalHashTables.XTRADB_INTERNAL_HASH_TABLES);
    }

    /**
     * Create a detached, initialised XtradbInternalHashTablesRecord
     */
    public XtradbInternalHashTablesRecord(String internalHashTableName, ULong totalMemory, ULong constantMemory, ULong variableMemory) {
        super(XtradbInternalHashTables.XTRADB_INTERNAL_HASH_TABLES);

        set(0, internalHashTableName);
        set(1, totalMemory);
        set(2, constantMemory);
        set(3, variableMemory);
    }
}
